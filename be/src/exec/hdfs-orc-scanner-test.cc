// Copyright 2016 Cloudera Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "exec/hdfs-orc-scanner.h"

#include <gtest/gtest.h>
#include <limits.h>
#include <sstream>

#include "common/init.h"
#include "exec/read-write-util.h"
#include "runtime/decimal-value.inline.h"
#include "runtime/runtime-state.h"
#include "runtime/string-value.inline.h"
#include "util/decompress.h"


namespace impala {

uint8_t empty_data_one_col_orc[] = {
    0x4f,0x52,0x43,0x2f,0x00,0x00,0x08,0x03,
    0x10,0x03,0x22,0x02,0x08,0x03,0x30,0x00,
    0x3a,0x08,0x08,0x00,0x12,0x02,0x18,0x00,
    0x50,0x00,0x40,0x90,0x4e,0x08,0x1a,0x10,
    0x01,0x18,0x80,0x80,0x10,0x22,0x02,0x00,
    0x0c,0x28,0x00,0x30,0x04,0x82,0xf4,0x03,
    0x03,0x4f,0x52,0x43,0x17
};
uint8_t data_contain_compressed_footer[] = {
    0x60,0x90,0xe0,0xe6,0x02,0xd1,0x8c,0x12,0x12,0x60,0x9a,0x49,0x42,0x1e,0x4c,0x33,
    0x4b,0x98,0x03,0x69,0x46,0xa0,0x38,0x3b,0x98,0x66,0x92,0xe0,0x07,0xd2,0x4c,0x40,
    0x9a,0x15,0xcc,0x67,0x96,0x30,0x06,0xf3,0x99,0x25,0x38,0x85,0x98,0x38,0x18,0x80,
    0x98,0x09,0x86,0x01,0xa8,0x00,0x00,0xe3,0x0a,0xe5,0x62,0xe1,0x60,0x09,0x60,0xe0,
    0xe2,0xe1,0x60,0x11,0x62,0xe3,0x60,0x12,0xe0,0x90,0x10,0x01,0xf2,0x84,0x38,0x58,
    0x94,0x78,0xb8,0x98,0x13,0x13,0x13,0x85,0x98,0x2b,0x2a,0xab,0x24,0x24,0x80,0x62,
    0xda,0x40,0x31,0x55,0x2e,0xa1,0xc4,0x9c,0x62,0xeb,0x94,0xb4,0xac,0x1c,0xeb,0xe2,
    0xc4,0xb4,0xac,0xe2,0xec,0x94,0x9c,0x34,0x21,0xde,0xfc,0xcc,0xf2,0x9c,0xe2,0x44,
    0x20,0x99,0x5a,0xa4,0x97,0x2d,0x51,0x14,0xc0,0x00,0x00,0x0a,0x01,0x00,0xe3,0x60,
    0x16,0xe8,0x67,0x92,0xe2,0xe2,0x60,0x16,0xa8,0x94,0x08,0x57,0xb0,0xd1,0x60,0x51,
    0x92,0xe1,0xe0,0x11,0x62,0x66,0x64,0x62,0x96,0x62,0x8d,0x4f,0xce,0xcf,0x31,0x80,
    0x50,0x86,0x10,0xca,0x48,0x89,0x89,0x83,0x19,0x88,0xd9,0x41,0xd8,0x80,0xc5,0x8a,
    0x85,0x83,0x25,0x80,0xc1,0x8a,0x87,0x83,0x45,0x88,0x8d,0x83,0x49,0x80,0x43,0x42,
    0x04,0xc8,0x13,0xe2,0x60,0x51,0xe2,0xe1,0x62,0x4e,0x4c,0x4c,0x14,0x62,0xae,0xa8,
    0xac,0x92,0x90,0x00,0x8a,0x69,0x03,0xc5,0x54,0xb9,0x84,0x12,0x73,0x8a,0xad,0x53,
    0xd2,0xb2,0x72,0xac,0x8b,0x13,0xd3,0xb2,0x8a,0xb3,0x53,0x72,0xd2,0x84,0x78,0xf3,
    0x33,0xcb,0x73,0x8a,0x13,0x81,0x64,0x6a,0x91,0x5e,0xb6,0x44,0x51,0x00,0x83,0xc3,
    0x04,0x3f,0x00,0x08,0x88,0x01,0x10,0x01,0x18,0x80,0x80,0x10,0x22,0x02,0x00,0x0c,
    0x28,0x57,0x30,0x01,0x82,0xf4,0x03,0x03,0x4f,0x52,0x43,0x18
};
uint8_t decompressed_footer[] = {
    0x08,0x03,0x10,0x8f,0x02,0x1a,0x0a,0x08,0x03,0x10,0x79,0x18,0x57,0x20,0x3c,0x28,
    0x04,0x22,0x1c,0x08,0x0c,0x12,0x03,0x01,0x02,0x03,0x1a,0x05,0x5f,0x63,0x6f,0x6c,
    0x30,0x1a,0x05,0x5f,0x63,0x6f,0x6c,0x31,0x1a,0x05,0x5f,0x63,0x6f,0x6c,0x32,0x22,
    0x02,0x08,0x03,0x22,0x02,0x08,0x07,0x22,0x02,0x08,0x07,0x30,0x04,0x3a,0x04,0x08,
    0x04,0x50,0x00,0x3a,0x0c,0x08,0x04,0x12,0x06,0x08,0x02,0x10,0x08,0x18,0x14,0x50,
    0x00,0x3a,0x12,0x08,0x04,0x22,0x0c,0x0a,0x03,0x61,0x61,0x61,0x12,0x03,0x78,0x79,
    0x7a,0x18,0x18,0x50,0x00,0x3a,0x2b,0x08,0x04,0x22,0x25,0x0a,0x12,0x61,0x6c,0x73,
    0x3b,0x64,0x66,0x6a,0x6c,0x3b,0x73,0x61,0x66,0x6a,0x73,0x6b,0x64,0x6c,0x66,0x12,
    0x0d,0x6f,0x69,0x77,0x6c,0x73,0x61,0x6f,0x69,0x77,0x65,0x72,0x2e,0x6b,0x18,0x72,
    0x50,0x00,0x40,0x90,0x4e
};
uint8_t orc_binary_no_compress[] = {
    0x4f,0x52,0x43,0x0a,0x06,0x12,0x04,0x08,0x03,0x50,0x00,0x0a,0x12,0x0a,0x02,0x00,
    0x00,0x12,0x0c,0x08,0x03,0x12,0x06,0x08,0x00,0x10,0x04,0x18,0x06,0x50,0x00,0x0a,
    0x25,0x0a,0x03,0x00,0x00,0x00,0x12,0x1e,0x08,0x03,0x22,0x18,0x0a,0x09,0x30,0x5f,
    0x30,0x5f,0x30,0x5f,0x61,0x61,0x61,0x12,0x09,0x32,0x5f,0x32,0x5f,0x32,0x5f,0x61,
    0x61,0x61,0x18,0x36,0x50,0x00,0x0a,0x1d,0x0a,0x03,0x00,0x00,0x00,0x12,0x16,0x08,
    0x03,0x22,0x10,0x0a,0x05,0x62,0x62,0x62,0x5f,0x30,0x12,0x05,0x62,0x62,0x62,0x5f,
    0x32,0x18,0x1e,0x50,0x00,0x46,0x02,0x02,0x40,0x30,0x5f,0x30,0x5f,0x30,0x5f,0x61,
    0x61,0x61,0x31,0x5f,0x31,0x5f,0x31,0x5f,0x61,0x61,0x61,0x32,0x5f,0x32,0x5f,0x32,
    0x5f,0x61,0x61,0x61,0x00,0x09,0x62,0x62,0x62,0x5f,0x30,0x62,0x62,0x62,0x5f,0x31,
    0x62,0x62,0x62,0x5f,0x32,0x00,0x05,0x0a,0x06,0x08,0x06,0x10,0x00,0x18,0x08,0x0a,
    0x06,0x08,0x06,0x10,0x01,0x18,0x14,0x0a,0x06,0x08,0x06,0x10,0x02,0x18,0x27,0x0a,
    0x06,0x08,0x06,0x10,0x03,0x18,0x1f,0x0a,0x06,0x08,0x01,0x10,0x01,0x18,0x04,0x0a,
    0x06,0x08,0x01,0x10,0x02,0x18,0x1b,0x0a,0x06,0x08,0x02,0x10,0x02,0x18,0x02,0x0a,
    0x06,0x08,0x01,0x10,0x03,0x18,0x0f,0x0a,0x06,0x08,0x02,0x10,0x03,0x18,0x02,0x12,
    0x02,0x08,0x00,0x12,0x02,0x08,0x02,0x12,0x02,0x08,0x02,0x12,0x02,0x08,0x02,0x0a,
    0x4c,0x0a,0x04,0x08,0x03,0x50,0x00,0x0a,0x0c,0x08,0x03,0x12,0x06,0x08,0x00,0x10,
    0x04,0x18,0x06,0x50,0x00,0x0a,0x1e,0x08,0x03,0x22,0x18,0x0a,0x09,0x30,0x5f,0x30,
    0x5f,0x30,0x5f,0x61,0x61,0x61,0x12,0x09,0x32,0x5f,0x32,0x5f,0x32,0x5f,0x61,0x61,
    0x61,0x18,0x36,0x50,0x00,0x0a,0x16,0x08,0x03,0x22,0x10,0x0a,0x05,0x62,0x62,0x62,
    0x5f,0x30,0x12,0x05,0x62,0x62,0x62,0x5f,0x32,0x18,0x1e,0x50,0x00,0x08,0x03,0x10,
    0xef,0x01,0x1a,0x0a,0x08,0x03,0x10,0x62,0x18,0x32,0x20,0x58,0x28,0x03,0x22,0x13,
    0x08,0x0c,0x12,0x03,0x01,0x02,0x03,0x1a,0x02,0x63,0x31,0x1a,0x02,0x63,0x32,0x1a,
    0x02,0x63,0x33,0x22,0x02,0x08,0x03,0x22,0x02,0x08,0x07,0x22,0x02,0x08,0x07,0x30,
    0x03,0x3a,0x04,0x08,0x03,0x50,0x00,0x3a,0x0c,0x08,0x03,0x12,0x06,0x08,0x00,0x10,
    0x04,0x18,0x06,0x50,0x00,0x3a,0x1e,0x08,0x03,0x22,0x18,0x0a,0x09,0x30,0x5f,0x30,
    0x5f,0x30,0x5f,0x61,0x61,0x61,0x12,0x09,0x32,0x5f,0x32,0x5f,0x32,0x5f,0x61,0x61,
    0x61,0x18,0x36,0x50,0x00,0x3a,0x16,0x08,0x03,0x22,0x10,0x0a,0x05,0x62,0x62,0x62,
    0x5f,0x30,0x12,0x05,0x62,0x62,0x62,0x5f,0x32,0x18,0x1e,0x50,0x00,0x40,0x90,0x4e,
    0x08,0x83,0x01,0x10,0x00,0x22,0x02,0x00,0x0c,0x28,0x4e,0x30,0x05,0x82,0xf4,0x03,
    0x03,0x4f,0x52,0x43,0x14
};
uint8_t orc_binary_zlib_compress[] = {
    0x4f,0x52,0x43,0x11,0x00,0x00,0x0a,0x06,0x12,0x04,0x08,0x03,0x50,0x00,0x2b,0x00,
    0x00,0x0a,0x13,0x0a,0x03,0x00,0x00,0x00,0x12,0x0c,0x08,0x03,0x12,0x06,0x08,0x00,
    0x10,0x04,0x18,0x06,0x50,0x00,0x44,0x00,0x00,0xe3,0x52,0xe7,0x62,0x65,0x00,0x01,
    0x21,0x39,0x0e,0x66,0x25,0x09,0x2e,0x4e,0x83,0x78,0x10,0x4c,0x4c,0x4c,0x14,0xe2,
    0x34,0x8a,0x07,0x41,0x20,0x53,0xc2,0x2c,0x80,0x01,0x00,0x3a,0x00,0x00,0xe3,0x92,
    0xe7,0x62,0x65,0x00,0x01,0x21,0x31,0x0e,0x66,0x25,0x01,0x2e,0xd6,0xa4,0xa4,0xa4,
    0x78,0x03,0x21,0x30,0x65,0x24,0x21,0x17,0xc0,0x00,0x00,0x09,0x00,0x00,0x46,0x02,
    0x02,0x40,0x28,0x00,0x00,0x33,0x88,0x37,0x00,0xc2,0xc4,0xc4,0x44,0xc3,0x78,0x10,
    0x04,0x32,0x8c,0xe2,0x41,0x10,0xc8,0x00,0x00,0x05,0x00,0x00,0x00,0x09,0x1a,0x00,
    0x00,0x4b,0x4a,0x4a,0x8a,0x37,0x48,0x02,0x12,0x86,0x20,0xc2,0x08,0x00,0x05,0x00,
    0x00,0x00,0x05,0x70,0x00,0x00,0x35,0xc8,0xb1,0x0a,0xc0,0x20,0x14,0x43,0x51,0xcd,
    0x43,0x2b,0x76,0x11,0x17,0x33,0x76,0xf1,0xff,0x7f,0xd1,0x18,0xe8,0x70,0x39,0x24,
    0xbd,0xb6,0x3a,0x12,0xdf,0x7e,0xcd,0xa4,0x05,0xb7,0x0d,0x7e,0x32,0xeb,0x7f,0x2c,
    0xb8,0x24,0x64,0xf1,0x0e,0x0e,0xef,0x60,0x99,0x68,0x49,0xe1,0xef,0x00,0x86,0x00,
    0x00,0xe3,0xf2,0xe1,0x62,0xe1,0x60,0x0e,0x60,0xe0,0xe2,0xe1,0x60,0x16,0x62,0xe3,
    0x60,0x10,0x60,0x91,0x60,0x03,0xf2,0xe4,0x38,0x98,0x95,0x24,0xb8,0x38,0x0d,0xe2,
    0x41,0x30,0x31,0x31,0x51,0x88,0xd3,0x28,0x1e,0x04,0x81,0x4c,0x09,0x33,0xa0,0xbc,
    0x18,0x50,0x5e,0x80,0x8b,0x35,0x29,0x29,0x29,0xde,0x40,0x08,0x4c,0x19,0x49,0xc8,
    0x05,0x30,0x00,0x00,0xe0,0x00,0x00,0xe3,0x60,0x16,0xb8,0xc7,0x28,0xc5,0xc5,0xc1,
    0x2c,0x90,0x21,0x61,0xa1,0x60,0xad,0xc1,0xac,0x24,0xcc,0xc1,0x23,0xc4,0xcc,0xc8,
    0xc4,0x2c,0xc5,0x94,0x6c,0x08,0xc4,0x46,0x40,0x6c,0xac,0xc4,0xc4,0xc1,0x0c,0xc4,
    0xec,0x20,0x6c,0xc0,0x6c,0xc5,0xc2,0xc1,0x1c,0xc0,0x60,0xc5,0xc3,0xc1,0x2c,0xc4,
    0xc6,0xc1,0x20,0xc0,0x22,0xc1,0x06,0xe4,0xc9,0x01,0x55,0x48,0x70,0x71,0x1a,0xc4,
    0x83,0x60,0x62,0x62,0xa2,0x10,0xa7,0x51,0x3c,0x08,0x02,0x99,0x12,0x66,0x40,0x79,
    0x31,0xa0,0xbc,0x00,0x17,0x6b,0x52,0x52,0x52,0xbc,0x81,0x10,0x98,0x32,0x92,0x90,
    0x0b,0x60,0x70,0x98,0xe0,0x07,0x00,0x08,0x73,0x10,0x01,0x18,0x80,0x80,0x10,0x22,
    0x02,0x00,0x0c,0x28,0x46,0x30,0x05,0x82,0xf4,0x03,0x03,0x4f,0x52,0x43,0x17
};
uint8_t orc_binary_lz4_compress[] = {
    0x4f,0x52,0x43,0x11,0x00,0x00,0x0a,0x06,0x12,0x04,0x08,0x03,0x50,0x00,0x2b,0x00,
    0x00,0x0a,0x13,0x0a,0x03,0x00,0x00,0x00,0x12,0x0c,0x08,0x03,0x12,0x06,0x08,0x00,
    0x10,0x04,0x18,0x06,0x50,0x00,0x53,0x00,0x00,0x0a,0x27,0x0a,0x05,0x00,0x00,0x00,
    0x00,0x00,0x12,0x1e,0x08,0x03,0x22,0x18,0x0a,0x09,0x30,0x5f,0x30,0x5f,0x30,0x5f,
    0x61,0x61,0x61,0x12,0x09,0x32,0x5f,0x32,0x5f,0x32,0x5f,0x61,0x61,0x61,0x18,0x36,
    0x50,0x00,0x43,0x00,0x00,0x0a,0x1f,0x0a,0x05,0x00,0x00,0x00,0x00,0x00,0x12,0x16,
    0x08,0x03,0x22,0x10,0x0a,0x05,0x62,0x62,0x62,0x5f,0x30,0x12,0x05,0x62,0x62,0x62,
    0x5f,0x32,0x18,0x1e,0x50,0x00,0x09,0x00,0x00,0x46,0x02,0x02,0x40,0x37,0x00,0x00,
    0x30,0x5f,0x30,0x5f,0x30,0x5f,0x61,0x61,0x61,0x31,0x5f,0x31,0x5f,0x31,0x5f,0x61,
    0x61,0x61,0x32,0x5f,0x32,0x5f,0x32,0x5f,0x61,0x61,0x61,0x05,0x00,0x00,0x00,0x09,
    0x1f,0x00,0x00,0x62,0x62,0x62,0x5f,0x30,0x62,0x62,0x62,0x5f,0x31,0x62,0x62,0x62,
    0x5f,0x32,0x05,0x00,0x00,0x00,0x05,0x9c,0x00,0x00,0x81,0x0a,0x06,0x08,0x06,0x10,
    0x00,0x18,0x0b,0x08,0x00,0x31,0x01,0x18,0x18,0x08,0x00,0x31,0x02,0x18,0x2c,0x08,
    0x00,0xb1,0x03,0x18,0x24,0x0a,0x06,0x08,0x01,0x10,0x01,0x18,0x07,0x08,0x00,0xb1,
    0x02,0x18,0x1e,0x0a,0x06,0x08,0x02,0x10,0x02,0x18,0x05,0x10,0x00,0x31,0x03,0x18,
    0x12,0x10,0x00,0xf0,0x04,0x03,0x18,0x05,0x12,0x02,0x08,0x00,0x12,0x02,0x08,0x02,
    0x12,0x02,0x08,0x02,0x12,0x02,0x08,0x02,0x9d,0x00,0x00,0x0a,0x4c,0x0a,0x04,0x08,
    0x03,0x50,0x00,0x0a,0x0c,0x08,0x03,0x12,0x06,0x08,0x00,0x10,0x04,0x18,0x06,0x50,
    0x00,0x0a,0x1e,0x08,0x03,0x22,0x18,0x0a,0x09,0x30,0x5f,0x30,0x5f,0x30,0x5f,0x61,
    0x61,0x61,0x12,0x09,0x32,0x5f,0x32,0x5f,0x32,0x5f,0x61,0x61,0x61,0x18,0x36,0x50,
    0x00,0x0a,0x16,0x08,0x03,0x22,0x10,0x0a,0x05,0x62,0x62,0x62,0x5f,0x30,0x12,0x05,
    0x62,0x62,0x62,0x5f,0x32,0x18,0x1e,0x50,0x00,0x07,0x01,0x00,0x08,0x03,0x10,0x88,
    0x02,0x1a,0x0a,0x08,0x03,0x10,0x73,0x18,0x41,0x20,0x51,0x28,0x03,0x22,0x13,0x08,
    0x0c,0x12,0x03,0x01,0x02,0x03,0x1a,0x02,0x63,0x31,0x1a,0x02,0x63,0x32,0x1a,0x02,
    0x63,0x33,0x22,0x02,0x08,0x03,0x22,0x02,0x08,0x07,0x22,0x02,0x08,0x07,0x30,0x03,
    0x3a,0x04,0x08,0x03,0x50,0x00,0x3a,0x0c,0x08,0x03,0x12,0x06,0x08,0x00,0x10,0x04,
    0x18,0x06,0x50,0x00,0x3a,0x1e,0x08,0x03,0x22,0x18,0x0a,0x09,0x30,0x5f,0x30,0x5f,
    0x30,0x5f,0x61,0x61,0x61,0x12,0x09,0x32,0x5f,0x32,0x5f,0x32,0x5f,0x61,0x61,0x61,
    0x18,0x36,0x50,0x00,0x3a,0x16,0x08,0x03,0x22,0x10,0x0a,0x05,0x62,0x62,0x62,0x5f,
    0x30,0x12,0x05,0x62,0x62,0x62,0x5f,0x32,0x18,0x1e,0x50,0x00,0x40,0x90,0x4e,0x08,
    0x86,0x01,0x10,0x04,0x18,0x80,0x80,0x10,0x22,0x02,0x00,0x0c,0x28,0x51,0x30,0x05,
    0x82,0xf4,0x03,0x03,0x4f,0x52,0x43,0x18
};
uint8_t orc_binary_lzo_compress[] = {
    0x4f,0x52,0x43,0x11,0x00,0x00,0x0a,0x06,0x12,0x04,0x08,0x03,0x50,0x00,0x2b,0x00,
    0x00,0x0a,0x13,0x0a,0x03,0x00,0x00,0x00,0x12,0x0c,0x08,0x03,0x12,0x06,0x08,0x00,
    0x10,0x04,0x18,0x06,0x50,0x00,0x53,0x00,0x00,0x0a,0x27,0x0a,0x05,0x00,0x00,0x00,
    0x00,0x00,0x12,0x1e,0x08,0x03,0x22,0x18,0x0a,0x09,0x30,0x5f,0x30,0x5f,0x30,0x5f,
    0x61,0x61,0x61,0x12,0x09,0x32,0x5f,0x32,0x5f,0x32,0x5f,0x61,0x61,0x61,0x18,0x36,
    0x50,0x00,0x43,0x00,0x00,0x0a,0x1f,0x0a,0x05,0x00,0x00,0x00,0x00,0x00,0x12,0x16,
    0x08,0x03,0x22,0x10,0x0a,0x05,0x62,0x62,0x62,0x5f,0x30,0x12,0x05,0x62,0x62,0x62,
    0x5f,0x32,0x18,0x1e,0x50,0x00,0x09,0x00,0x00,0x46,0x02,0x02,0x40,0x37,0x00,0x00,
    0x30,0x5f,0x30,0x5f,0x30,0x5f,0x61,0x61,0x61,0x31,0x5f,0x31,0x5f,0x31,0x5f,0x61,
    0x61,0x61,0x32,0x5f,0x32,0x5f,0x32,0x5f,0x61,0x61,0x61,0x05,0x00,0x00,0x00,0x09,
    0x1f,0x00,0x00,0x62,0x62,0x62,0x5f,0x30,0x62,0x62,0x62,0x5f,0x31,0x62,0x62,0x62,
    0x5f,0x32,0x05,0x00,0x00,0x00,0x05,0x9c,0x00,0x00,0x19,0x0a,0x06,0x08,0x06,0x10,
    0x00,0x18,0x0b,0x9f,0x00,0x01,0x18,0x18,0x9f,0x00,0x02,0x18,0x2c,0x9c,0x00,0x08,
    0x03,0x18,0x24,0x0a,0x06,0x08,0x01,0x10,0x01,0x18,0x07,0x9c,0x00,0x08,0x02,0x18,
    0x1e,0x0a,0x06,0x08,0x02,0x10,0x02,0x18,0x05,0x9f,0x01,0x03,0x18,0x12,0x9c,0x01,
    0x00,0x01,0x03,0x18,0x05,0x12,0x02,0x08,0x00,0x12,0x02,0x08,0x02,0x12,0x02,0x08,
    0x02,0x12,0x02,0x08,0x02,0x11,0x00,0x00,0x9d,0x00,0x00,0x0a,0x4c,0x0a,0x04,0x08,
    0x03,0x50,0x00,0x0a,0x0c,0x08,0x03,0x12,0x06,0x08,0x00,0x10,0x04,0x18,0x06,0x50,
    0x00,0x0a,0x1e,0x08,0x03,0x22,0x18,0x0a,0x09,0x30,0x5f,0x30,0x5f,0x30,0x5f,0x61,
    0x61,0x61,0x12,0x09,0x32,0x5f,0x32,0x5f,0x32,0x5f,0x61,0x61,0x61,0x18,0x36,0x50,
    0x00,0x0a,0x16,0x08,0x03,0x22,0x10,0x0a,0x05,0x62,0x62,0x62,0x5f,0x30,0x12,0x05,
    0x62,0x62,0x62,0x5f,0x32,0x18,0x1e,0x50,0x00,0x07,0x01,0x00,0x08,0x03,0x10,0x88,
    0x02,0x1a,0x0a,0x08,0x03,0x10,0x73,0x18,0x41,0x20,0x51,0x28,0x03,0x22,0x13,0x08,
    0x0c,0x12,0x03,0x01,0x02,0x03,0x1a,0x02,0x63,0x31,0x1a,0x02,0x63,0x32,0x1a,0x02,
    0x63,0x33,0x22,0x02,0x08,0x03,0x22,0x02,0x08,0x07,0x22,0x02,0x08,0x07,0x30,0x03,
    0x3a,0x04,0x08,0x03,0x50,0x00,0x3a,0x0c,0x08,0x03,0x12,0x06,0x08,0x00,0x10,0x04,
    0x18,0x06,0x50,0x00,0x3a,0x1e,0x08,0x03,0x22,0x18,0x0a,0x09,0x30,0x5f,0x30,0x5f,
    0x30,0x5f,0x61,0x61,0x61,0x12,0x09,0x32,0x5f,0x32,0x5f,0x32,0x5f,0x61,0x61,0x61,
    0x18,0x36,0x50,0x00,0x3a,0x16,0x08,0x03,0x22,0x10,0x0a,0x05,0x62,0x62,0x62,0x5f,
    0x30,0x12,0x05,0x62,0x62,0x62,0x5f,0x32,0x18,0x1e,0x50,0x00,0x40,0x90,0x4e,0x08,
    0x86,0x01,0x10,0x03,0x18,0x80,0x80,0x10,0x22,0x02,0x00,0x0c,0x28,0x51,0x30,0x05,
    0x82,0xf4,0x03,0x03,0x4f,0x52,0x43,0x18
};
uint8_t orc_binary_snappy_compress[] = {
    0x4f,0x52,0x43,0x11,0x00,0x00,0x0a,0x06,0x12,0x04,0x08,0x03,0x50,0x00,0x2b,0x00,
    0x00,0x0a,0x13,0x0a,0x03,0x00,0x00,0x00,0x12,0x0c,0x08,0x03,0x12,0x06,0x08,0x00,
    0x10,0x04,0x18,0x06,0x50,0x00,0x53,0x00,0x00,0x0a,0x27,0x0a,0x05,0x00,0x00,0x00,
    0x00,0x00,0x12,0x1e,0x08,0x03,0x22,0x18,0x0a,0x09,0x30,0x5f,0x30,0x5f,0x30,0x5f,
    0x61,0x61,0x61,0x12,0x09,0x32,0x5f,0x32,0x5f,0x32,0x5f,0x61,0x61,0x61,0x18,0x36,
    0x50,0x00,0x43,0x00,0x00,0x0a,0x1f,0x0a,0x05,0x00,0x00,0x00,0x00,0x00,0x12,0x16,
    0x08,0x03,0x22,0x10,0x0a,0x05,0x62,0x62,0x62,0x5f,0x30,0x12,0x05,0x62,0x62,0x62,
    0x5f,0x32,0x18,0x1e,0x50,0x00,0x09,0x00,0x00,0x46,0x02,0x02,0x40,0x37,0x00,0x00,
    0x30,0x5f,0x30,0x5f,0x30,0x5f,0x61,0x61,0x61,0x31,0x5f,0x31,0x5f,0x31,0x5f,0x61,
    0x61,0x61,0x32,0x5f,0x32,0x5f,0x32,0x5f,0x61,0x61,0x61,0x05,0x00,0x00,0x00,0x09,
    0x1f,0x00,0x00,0x62,0x62,0x62,0x5f,0x30,0x62,0x62,0x62,0x5f,0x31,0x62,0x62,0x62,
    0x5f,0x32,0x05,0x00,0x00,0x00,0x05,0x9c,0x00,0x00,0x58,0x1c,0x0a,0x06,0x08,0x06,
    0x10,0x00,0x18,0x0b,0x05,0x08,0x08,0x01,0x18,0x18,0x05,0x08,0x08,0x02,0x18,0x2c,
    0x05,0x08,0x28,0x03,0x18,0x24,0x0a,0x06,0x08,0x01,0x10,0x01,0x18,0x07,0x05,0x08,
    0x28,0x02,0x18,0x1e,0x0a,0x06,0x08,0x02,0x10,0x02,0x18,0x05,0x05,0x10,0x08,0x03,
    0x18,0x12,0x05,0x10,0x48,0x03,0x18,0x05,0x12,0x02,0x08,0x00,0x12,0x02,0x08,0x02,
    0x12,0x02,0x08,0x02,0x12,0x02,0x08,0x02,0x9d,0x00,0x00,0x0a,0x4c,0x0a,0x04,0x08,
    0x03,0x50,0x00,0x0a,0x0c,0x08,0x03,0x12,0x06,0x08,0x00,0x10,0x04,0x18,0x06,0x50,
    0x00,0x0a,0x1e,0x08,0x03,0x22,0x18,0x0a,0x09,0x30,0x5f,0x30,0x5f,0x30,0x5f,0x61,
    0x61,0x61,0x12,0x09,0x32,0x5f,0x32,0x5f,0x32,0x5f,0x61,0x61,0x61,0x18,0x36,0x50,
    0x00,0x0a,0x16,0x08,0x03,0x22,0x10,0x0a,0x05,0x62,0x62,0x62,0x5f,0x30,0x12,0x05,
    0x62,0x62,0x62,0x5f,0x32,0x18,0x1e,0x50,0x00,0x07,0x01,0x00,0x08,0x03,0x10,0x88,
    0x02,0x1a,0x0a,0x08,0x03,0x10,0x73,0x18,0x41,0x20,0x51,0x28,0x03,0x22,0x13,0x08,
    0x0c,0x12,0x03,0x01,0x02,0x03,0x1a,0x02,0x63,0x31,0x1a,0x02,0x63,0x32,0x1a,0x02,
    0x63,0x33,0x22,0x02,0x08,0x03,0x22,0x02,0x08,0x07,0x22,0x02,0x08,0x07,0x30,0x03,
    0x3a,0x04,0x08,0x03,0x50,0x00,0x3a,0x0c,0x08,0x03,0x12,0x06,0x08,0x00,0x10,0x04,
    0x18,0x06,0x50,0x00,0x3a,0x1e,0x08,0x03,0x22,0x18,0x0a,0x09,0x30,0x5f,0x30,0x5f,
    0x30,0x5f,0x61,0x61,0x61,0x12,0x09,0x32,0x5f,0x32,0x5f,0x32,0x5f,0x61,0x61,0x61,
    0x18,0x36,0x50,0x00,0x3a,0x16,0x08,0x03,0x22,0x10,0x0a,0x05,0x62,0x62,0x62,0x5f,
    0x30,0x12,0x05,0x62,0x62,0x62,0x5f,0x32,0x18,0x1e,0x50,0x00,0x40,0x90,0x4e,0x08,
    0x86,0x01,0x10,0x02,0x18,0x80,0x80,0x10,0x22,0x02,0x00,0x0c,0x28,0x51,0x30,0x05,
    0x82,0xf4,0x03,0x03,0x4f,0x52,0x43,0x18
};

class HdfsOrcScannerTest : public testing::Test {
 public:
  void TestReadPostscript(uint8_t* data, int64_t data_len, int expected_postscript_len,
      int expected_footer_len) {
    // Reset parse_status_
    scanner_.parse_status_ = Status::OK();
    scanner_.metadata_range_ = &range_;

    uint64_t postscript_len;
    Status status = scanner_.ParsePostscript(data, data_len, &postscript_len);
    EXPECT_TRUE(status.ok());
    EXPECT_EQ(expected_postscript_len, static_cast<int>(postscript_len));

    orc::proto::PostScript postscript = scanner_.getPostscript();
    EXPECT_EQ(expected_footer_len, static_cast<int>(postscript.footerlength()));
  }

  void TestReadFooter(uint8_t* data, int64_t data_len) {
    // Reset parse_status_
    scanner_.parse_status_ = Status::OK();
    scanner_.metadata_range_ = &range_;

    uint64_t postscript_len;
    Status status = scanner_.ParsePostscript(data, data_len, &postscript_len);
    EXPECT_TRUE(status.ok());

    uint64_t footer_len = scanner_.getPostscript().footerlength();
    uint8_t *footer_ptr = data + data_len - 1 - postscript_len - footer_len;
    status = scanner_.ParseFooter(footer_ptr, footer_len, true);
    EXPECT_TRUE(status.ok()) << "Failed to parse footer: " << status.GetDetail();
  }

 protected:
  HdfsOrcScanner scanner_;
  DiskIoMgr::ScanRange range_;  // fake range
};

TEST_F(HdfsOrcScannerTest, BasicPostscriptTest) {
  TestReadPostscript(empty_data_one_col_orc, sizeof(empty_data_one_col_orc), 0x17, 26);
}

TEST_F(HdfsOrcScannerTest, BasicFooterTest) {
  TestReadFooter(data_contain_compressed_footer, sizeof(data_contain_compressed_footer));
}

TEST_F(HdfsOrcScannerTest, ZlibFooterTest) {
  TestReadFooter(orc_binary_zlib_compress, sizeof(orc_binary_zlib_compress));
}

TEST_F(HdfsOrcScannerTest, Lz4FooterTest) {
  TestReadFooter(orc_binary_lz4_compress, sizeof(orc_binary_lz4_compress));
}

TEST_F(HdfsOrcScannerTest, LzoFooterTest) {
  // TODO Codec::CreateDecompressor cannot create a LZO decompressor, how to support LZO?
  //TestReadFooter(orc_binary_lzo_compress, sizeof(orc_binary_lzo_compress));
}

TEST_F(HdfsOrcScannerTest, SnappyFooterTest) {
  TestReadFooter(orc_binary_snappy_compress, sizeof(orc_binary_snappy_compress));
}

TEST_F(HdfsOrcScannerTest, NoCompressFooterTest) {
  TestReadFooter(orc_binary_no_compress, sizeof(orc_binary_no_compress));
}

}

int main(int argc, char **argv) {
  ::testing::InitGoogleTest(&argc, argv);
  InitCommonRuntime(argc, argv, false, impala::TestInfo::BE_TEST);
  return RUN_ALL_TESTS();
}
